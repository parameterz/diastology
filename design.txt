/project
    /index.html
    /node1.html
    /node2.html
    /styles.css
    /scripts.js


index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Start</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <h1>Welcome to the Algorithm Evaluation</h1>
    <button onclick="navigateTo('node1.html')">Start</button>
    <script src="scripts.js"></script>
</body>
</html>


node1.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Node 1</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body data-node="1">
    <h1>Decision Point 1</h1>
    <form id="decisionForm">
        <label for="heartRate">Heart Rate:</label>
        <input type="number" id="heartRate" name="heartRate" required>
        <br>
        <label for="symptoms">Symptoms:</label>
        <select id="symptoms" name="symptoms">
            <option value="none">None</option>
            <option value="mild">Mild</option>
            <option value="severe">Severe</option>
        </select>
        <br>
        <button type="submit">Submit</button>
    </form>
    <script src="scripts.js"></script>
</body>
</html>

script.js
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('decisionForm');
    if (form) {
        form.addEventListener('submit', function(event) {
            event.preventDefault();  // Prevent the default form submission
            processDecision();
        });
    }
});

function processDecision() {
    const form = document.getElementById('decisionForm');
    const formData = new FormData(form);

    // Convert formData to an object
    const data = {};
    formData.forEach((value, key) => {
        data[key] = value;
    });

    // Logic to determine the next page based on form data and current page
    let nextPage = 'default.html';  // Default next page

    const currentPage = document.body.getAttribute('data-node');
    switch(currentPage) {
        case '1':
            if (data.heartRate < 60) {
                nextPage = 'node_bradycardia.html';
            } else if (data.heartRate > 100) {
                nextPage = 'node_tachycardia.html';
            } else if (data.symptoms === 'severe') {
                nextPage = 'node_critical.html';
            } else {
                nextPage = 'node2.html';
            }
            break;
        // Add cases for other nodes as needed
        default:
            nextPage = 'default.html';
    }

    // Save the decision if needed
    localStorage.setItem('lastDecision', JSON.stringify(data));

    // Navigate to the next page
    window.location.href = nextPage;
}

function navigateTo(page) {
    window.location.href = page;
}


Benefits of This Approach
Centralized Logic: All JavaScript logic is in one file, making it easier to manage and update.
Modular Design: The script can easily handle different nodes by checking the data-node attribute.
Scalability: Adding new nodes or decision points requires minimal changes to the JavaScript file.
By following this structure, you ensure that your project remains organized, maintainable, and scalable.